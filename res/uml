<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CyclingPortalImpl&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CyclingPortalImpl(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getRankedAdjustedElapsedTimesInStage(int): LocalTime[]&lt;br/&gt;+ removeCheckpoint(int): void&lt;br/&gt;+ removeTeam(int): void&lt;br/&gt;+ getRiderAdjustedElapsedTimeInStage(int, int): LocalTime&lt;br/&gt;+ removeRider(int): void&lt;br/&gt;+ createRace(String, String): int&lt;br/&gt;+ getRidersPointsInStage(int): int[]&lt;br/&gt;+ concludeStagePreparation(int): void&lt;br/&gt;+ getRidersRankInStage(int): int[]&lt;br/&gt;+ loadCyclingPortal(String): void&lt;br/&gt;+ createTeam(String, String): int&lt;br/&gt;+ getStageLength(int): double&lt;br/&gt;+ registerRiderResultsInStage(int, int, LocalTime[]): void&lt;br/&gt;+ addStageToRace(int, String, String, double, LocalDateTime, StageType): int&lt;br/&gt;+ addCategorizedClimbToStage(int, Double, CheckpointType, Double, Double): int&lt;br/&gt;+ getRaceStages(int): int[]&lt;br/&gt;+ createRider(int, String, int): int&lt;br/&gt;+ deleteRiderResultsInStage(int, int): void&lt;br/&gt;+ getTeamRiders(int): int[]&lt;br/&gt;+ eraseCyclingPortal(): void&lt;br/&gt;+ getNumberOfStages(int): int&lt;br/&gt;+ viewRaceDetails(int): String&lt;br/&gt;+ getRidersMountainPointsInStage(int): int[]&lt;br/&gt;+ removeStageById(int): void&lt;br/&gt;+ addIntermediateSprintToStage(int, double): int&lt;br/&gt;+ getStageCheckpoints(int): int[]&lt;br/&gt;+ removeRaceById(int): void&lt;br/&gt;+ saveCyclingPortal(String): void&lt;br/&gt;+ getRiderResultsInStage(int, int): LocalTime[]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; raceIds: int[]&lt;br/&gt; teams: int[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-92" y="920" width="457" height="809" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;MiniCyclingPortal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getRiderAdjustedElapsedTimeInStage(int, int): LocalTime&lt;br/&gt;+ getRiderResultsInStage(int, int): LocalTime[]&lt;br/&gt;+ concludeStagePreparation(int): void&lt;br/&gt;+ getStageCheckpoints(int): int[]&lt;br/&gt;+ saveCyclingPortal(String): void&lt;br/&gt;+ getNumberOfStages(int): int&lt;br/&gt;+ createRider(int, String, int): int&lt;br/&gt;+ eraseCyclingPortal(): void&lt;br/&gt;+ deleteRiderResultsInStage(int, int): void&lt;br/&gt;+ addIntermediateSprintToStage(int, double): int&lt;br/&gt;+ getRidersRankInStage(int): int[]&lt;br/&gt;+ createRace(String, String): int&lt;br/&gt;+ getTeamRiders(int): int[]&lt;br/&gt;+ removeStageById(int): void&lt;br/&gt;+ removeTeam(int): void&lt;br/&gt;+ viewRaceDetails(int): String&lt;br/&gt;+ addCategorizedClimbToStage(int, Double, CheckpointType, Double, Double): int&lt;br/&gt;+ createTeam(String, String): int&lt;br/&gt;+ registerRiderResultsInStage(int, int, LocalTime[]): void&lt;br/&gt;+ getStageLength(int): double&lt;br/&gt;+ removeRaceById(int): void&lt;br/&gt;+ getRankedAdjustedElapsedTimesInStage(int): LocalTime[]&lt;br/&gt;+ removeRider(int): void&lt;br/&gt;+ getRidersPointsInStage(int): int[]&lt;br/&gt;+ loadCyclingPortal(String): void&lt;br/&gt;+ getRidersMountainPointsInStage(int): int[]&lt;br/&gt;+ addStageToRace(int, String, String, double, LocalDateTime, StageType): int&lt;br/&gt;+ removeCheckpoint(int): void&lt;br/&gt;+ getRaceStages(int): int[]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; raceIds: int[]&lt;br/&gt; teams: int[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-92" y="75" width="457" height="784" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Serializable&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="67" y="-13" width="138" height="35" as="geometry" />
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node0" target="node2" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node2" target="node1" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.001;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>